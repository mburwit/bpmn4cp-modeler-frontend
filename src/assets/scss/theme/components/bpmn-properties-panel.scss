@use 'sass:map';
@use '~@angular/material' as mat;

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, 'primary');

  @include propertiesGroup($theme);

  ul.bpp-properties-tabs-links > li.bpp-active a {
    border-top: 2px solid mat.get-color-from-palette($primary-palette, 500) !important;
  }

  .bpp-properties-panel {
    background-color: #fafafa !important;
    border-left: 1px solid mat.get-color-from-palette($primary-palette, 500) !important;
    border-bottom: 1px solid mat.get-color-from-palette($primary-palette, 500) !important;
  }

  .bpp-properties-panel button:hover {
    color: mat.get-color-from-palette($primary-palette, 500) !important;
  }

  .bpp-properties-panel input:focus,
  .bpp-properties-panel button:focus,
  .bpp-properties-panel textarea:focus,
  .bpp-properties-panel select:focus,
  .bpp-properties-panel [contenteditable]:focus {
    border-color: mat.get-color-from-palette($primary-palette, 500) !important;
    box-shadow: 0 0 1px 2px mat.get-color-from-palette($primary-palette, 400) !important;
  }

  .bpp-entry-link {
    color: mat.get-color-from-palette($primary-palette, 500) !important;
  }

  .bpp-field-description a {
    color: mat.get-color-from-palette($primary-palette, 500) !important;
  }

  .bpp-field-description a:hover {
    color: mat.get-color-from-palette($primary-palette, 500) !important;
  }
}

@mixin propertiesGroup($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, 'primary');

  .bpp-properties-group {

    > .group-toggle {
      &:hover {
        background-color: mat.get-color-from-palette($primary-palette, 500) !important;
      }
    }

    &:hover > .group-toggle {
      &:hover {
        background-color: mat.get-color-from-palette($primary-palette, 500) !important;
      }
    }

    &.group-closed {
      max-height: 40px !important;
      background-color: unset !important;

      &:hover > .group-toggle {
        background-color: mat.get-color-from-palette($primary-palette, 500) !important;
      }

      &:hover > .group-label {
        color: mat.get-color-from-palette($primary-palette, 500) !important;
      }
    }
  }

}
